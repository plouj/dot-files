;; .emacs

;;; uncomment this line to disable loading of "default.el" at startup
;; (setq inhibit-default-init t)

(normal-top-level-add-to-load-path
  '("~/elisp"))

;; enable visual feedback on selections
(setq transient-mark-mode t)

;; default to better frame titles
(setq frame-title-format
      (concat  "%b - emacs@" (system-name)))

;; default to unified diffs
(setq diff-switches "-u")

;; always end a file with a newline
(setq require-final-newline 'query)

;;; uncomment for CJK utf-8 support for non-Asian users
;; (require 'un-define)


(setq auto-mode-alist (cons (cons "\\.pro" 'prolog-mode)
			    auto-mode-alist))
(setq auto-mode-alist (cons (cons "\\.pl" 'prolog-mode)
			    auto-mode-alist))
(setq auto-mode-alist (cons (cons "\\.yap" 'prolog-mode)
			    auto-mode-alist))

(require 'cc-defs)
(autoload 'css-mode "css-mode")
(setq auto-mode-alist
      (cons '("\\.css\\'" . css-mode) auto-mode-alist))

(setq compilation-scroll-output 1)

(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(transient-mark-mode t))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 )

;;set the theme
;;(set-default-font "-*-terminus-*-*-*-*-20-*-*-*-*-*-*-*")
;;(set-face-attribute 'default nil :foreground "lightgray" :background "black")

;;enable emacs sessions
(desktop-load-default)
(desktop-read)

(global-set-key "%" 'match-paren)
(defun match-paren (arg)
  "Go to the matching paren if on a paren; otherwise insert %."
  (interactive "p")
  (cond ((looking-at "\\s\(") (forward-list 1) (backward-char 1))
	((looking-at "\\s\)") (forward-char 1) (backward-list 1))
	(t (self-insert-command (or arg 1)))))

(iswitchb-mode 1)

;; activation
;; The following lines are always needed.  Choose your own keys.
(add-to-list 'auto-mode-alist '("\\.org\\'" . org-mode))
(global-set-key "\C-cl" 'org-store-link)
(global-set-key "\C-ca" 'org-agenda)
(global-set-key "\C-cb" 'org-iswitchb)
(setq org-log-done t)
(setq org-agenda-files (list "~/notes"
                             "~/todo"))
(setq org-hide-leading-stars t)
(setq org-yank-adjusted-subtrees t)

(require 'org-install)

;; activate font-lock-mode in Org buffers
(add-hook 'org-mode-hook 'turn-on-font-lock)  ; Org buffers only

;; remember mode setup
(setq org-default-notes-file "~/notes")
(setq remember-annotation-functions '(org-remember-annotation))
(setq remember-handler-functions '(org-remember-handler))
(add-hook 'remember-mode-hook 'org-remember-apply-template)
(define-key global-map "\C-cr" 'org-remember)

(setq org-remember-templates
      '(("Todo" ?t "* TODO %^{Brief Description} %^g\n%?\nAdded: %U" "~/todo" "ToDo List")
	))

;; enable server mode
(server-start)

(setq-default indent-tabs-mode nil);

(which-function-mode t)

;;; This was installed by package-install.el.
;;; This provides support for the package system and
;;; interfacing with ELPA, the package archive.
;;; Move this code earlier if you want to reference
;;; packages in your .emacs.
(when
    (load
     (expand-file-name "~/.emacs.d/elpa/package.el"))
  (package-initialize))
